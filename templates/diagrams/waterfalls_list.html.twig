<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Waterfalls</li>
    </ol>
</nav>

<div class="row">
    <div class="col-6">
        <p id="user-agent"></p>
        <table class="table table-sm table-scroll">
            <thead>
            <tr>
                <th class="col-3" scope="col">Page Type</th>
                <th class="col-3" scope="col">Date</th>
                <th class="col-3" scope="col">First Byte</th>
                <th class="col-3" scope="col">First Paint</th>
            </tr>
            </thead>
            <tbody>
            {% for page_view in page_views %}
                <tr data-beacon-id="{{ page_view.getPageViewId() }}" class="beacon-row" id="row_{{ page_view.getPageViewId() }}">
                    <td class="col-3">View ID: {{ page_view.getPageViewId() }}</td>
                    <td class="col-3">15/05/2018 04:32:13</td>
                    <td class="col-3">{{ page_view.getNtResSt() - page_view.getNtNavSt() }} ms</td>
                    <td class="col-3">{{ page_view.getPtFcp() }} ms</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
        <script type="text/javascript">
            var beaconRows = $('tr.beacon-row');

            beaconRows.on('click', function() {
                $(beaconRows).removeClass('active');
                $(this).addClass('active');

                var data = {
                    page_view_id : $(this).data('beacon-id')
                };

                //load from /diagrams/beacon/draw
                $.ajax('/diagrams/beacon/draw',
                        {
                            method: 'post',
                            data: data,
                            success : function(response) {
                                $('#user-agent').html(response.user_agent);
                                $('#waterfall-view').html(response.waterfall);

                                var data = [{
                                    values: response.resource_distribution.values,
                                    labels: response.resource_distribution.labels,
                                    type: 'pie',
                                    marker: {
                                        colors: ["rgb(178, 234, 148)","rgb(130, 181, 252)","rgb(196, 154, 232)","rgb(255, 82, 62)","rgb(254, 197, 132)","rgb(196, 196, 196)"]
                                    }
                                }];

                                var layout = {
                                    height: 200,
                                    width: 400,
                                    margin: {
                                        l: 10,
                                        r: 10,
                                        b: 20,
                                        t: 28,
                                        pad: 4
                                    },
                                    title: 'Resources Size distribution (%)'
                                };

                                Plotly.newPlot('resourcesSize', data, layout, {displayModeBar: false});
                            }
                        }
                );
            });

            beaconRows.first().click();
        </script>
    </div>
    <div class="col-6">
        <div id="resourcesSize" style="margin-top: 20px;"></div>
        <script type="text/javascript">
            /**
             * css - rgb(178, 234, 148)
             * html - rgb(130, 181, 252)
             * image - rgb(196, 154, 232)
             * font - rgb(255, 82, 62)
             * javascript - rgb(254, 197, 132)
             * other - rgb(196, 196, 196)
             */
            var data = [{
                values: {{ resource_sizes_values|raw }},
                labels: {{ resource_sizes_labels|raw }},
                type: 'pie',
                marker: {
                    colors: ["rgb(178, 234, 148)","rgb(130, 181, 252)","rgb(196, 154, 232)","rgb(255, 82, 62)","rgb(254, 197, 132)","rgb(196, 196, 196)"]
                }
            }];

            var layout = {
                height: 200,
                width: 400,
                margin: {
                    l: 10,
                    r: 10,
                    b: 0,
                    t: 28,
                    pad: 4
                },
                title: 'Resources Size distribution (%)'
            };

            Plotly.newPlot('resourcesSize', data, layout, {displayModeBar: false});
        </script>
    </div>
</div>

<div class="row">
    <div class="col-8">
        <div id="waterfall-container">
            <div id="legend-holder">
                <ul class="resource-legend">
                    <li class="legend-blocked" title="Time spent in a queue waiting for a network connection.">Blocked</li>
                    <li class="legend-dns" title="DNS resolution time.">DNS</li>
                    <li class="legend-connect" title="Time required to create TCP connection.">Connect</li>
                    <li class="legend-ssl" title="Time required for SSL/TLS negotiation.">SSL (TLS)</li>
                    <li class="legend-send" title="Time required to send HTTP request to the server.">Send</li>
                    <li class="legend-wait" title="Waiting for a response from the server.">Wait</li>
                    <li class="legend-receive" title="Time required to read entire response from the server (or cache).">
                        Receive
                    </li>
                </ul>
            </div>

            <div id="waterfall-view">
                {#HERE THE WATERFALL SVG STARTS#}
                {{ waterfallHtml|raw }}
                {#{% include 'diagrams/waterfalls/example.html.twig' %}#}
            </div>
        </div>
    </div>
</div>